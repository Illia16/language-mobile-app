{
  "service": {
    "service": "cf-language-app",
    "serviceObject": {
      "name": "cf-language-app"
    },
    "provider": {
      "name": "aws",
      "stage": "prod",
      "region": "us-east-1",
      "profile": "personal",
      "apiGateway": {
        "restApiId": {
          "Ref": "LanguageAppApiGW"
        },
        "restApiRootResourceId": {
          "Fn::GetAtt": [
            "LanguageAppApiGW",
            "RootResourceId"
          ]
        }
      },
      "deploymentBucket": "serverless-deployment-bucket-illia-us-east-1",
      "runtime": "nodejs14.x",
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Table",
                    "Arn"
                  ]
                }
              ],
              "Action": [
                "dynamodb:Scan",
                "dynamodb:PutItem",
                "dynamodb:GetItem"
              ]
            }
          ]
        }
      },
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "serverless-deployment-bucket-illia-us-east-1"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GetTableLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/language-app-get-item"
            }
          },
          "PostItemLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/language-app-post-item"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com",
                        "edgelambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "cf-language-app",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/language-app-get-item:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/language-app-post-item:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/language-app-get-item:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/language-app-post-item:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents",
                          "logs:DescribeLogStreams"
                        ],
                        "Resource": "arn:aws:logs:*:*:*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "cf-language-app",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetTableLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-deployment-bucket-illia-us-east-1",
                "S3Key": "serverless/cf-language-app/prod/1643161279246-2022-01-26T01:41:19.246Z/cf-language-app.zip"
              },
              "Handler": "api/getItem/index.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "language-app-get-item",
              "MemorySize": 128,
              "Timeout": 5,
              "Description": "get item from the dynamodb table",
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetTableLogGroup"
            ]
          },
          "PostItemLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-deployment-bucket-illia-us-east-1",
                "S3Key": "serverless/cf-language-app/prod/1643161279246-2022-01-26T01:41:19.246Z/cf-language-app.zip"
              },
              "Handler": "api/postItem/index.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "language-app-post-item",
              "MemorySize": 128,
              "Timeout": 5,
              "Description": "post item to the dynamodb table",
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PostItemLogGroup"
            ]
          },
          "GetTableLambdaVersionf2x2M0SmTJE59YI4kYyXcSEXNQRTHd7IiKRLl7M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTableLambdaFunction"
              },
              "CodeSha256": "Z9NB6HJg5fBGfpgGC/07Fql4z0/7xv6/SW2tszO8D4A=",
              "Description": "get item from the dynamodb table"
            }
          },
          "PostItemLambdaVersionhhYmrqkBxH36SrfWk5zwiJNM7RO8S8a0vejYqwzNtQA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostItemLambdaFunction"
              },
              "CodeSha256": "Z9NB6HJg5fBGfpgGC/07Fql4z0/7xv6/SW2tszO8D4A=",
              "Description": "post item to the dynamodb table"
            }
          },
          "ApiGatewayResourceApi": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "LanguageAppApiGW",
                  "RootResourceId"
                ]
              },
              "PathPart": "api",
              "RestApiId": {
                "Ref": "LanguageAppApiGW"
              }
            }
          },
          "ApiGatewayResourceApiGetitem": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApi"
              },
              "PathPart": "getItem",
              "RestApiId": {
                "Ref": "LanguageAppApiGW"
              }
            }
          },
          "ApiGatewayResourceApiPostitem": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApi"
              },
              "PathPart": "postItem",
              "RestApiId": {
                "Ref": "LanguageAppApiGW"
              }
            }
          },
          "ApiGatewayMethodApiGetitemOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiGetitem"
              },
              "RestApiId": {
                "Ref": "LanguageAppApiGW"
              }
            }
          },
          "ApiGatewayMethodApiPostitemOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiPostitem"
              },
              "RestApiId": {
                "Ref": "LanguageAppApiGW"
              }
            }
          },
          "ApiGatewayMethodApiGetitemGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiGetitem"
              },
              "RestApiId": {
                "Ref": "LanguageAppApiGW"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetTableLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetTableLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodApiPostitemPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiPostitem"
              },
              "RestApiId": {
                "Ref": "LanguageAppApiGW"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PostItemLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PostItemLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1643161276295": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "LanguageAppApiGW"
              },
              "StageName": "prod"
            },
            "DependsOn": [
              "ApiGatewayMethodApiGetitemOptions",
              "ApiGatewayMethodApiPostitemOptions",
              "ApiGatewayMethodApiGetitemGet",
              "ApiGatewayMethodApiPostitemPost"
            ]
          },
          "GetTableLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTableLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PostItemLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PostItemLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LanguageAppApiGW": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "languageAppApiwGW"
            }
          },
          "Table": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "PointInTimeRecoverySpecification": {
                "PointInTimeRecoveryEnabled": true
              },
              "ProvisionedThroughput": {
                "ReadCapacityUnits": "5",
                "WriteCapacityUnits": "5"
              },
              "TableName": "languageAppIn",
              "StreamSpecification": {
                "StreamViewType": "NEW_IMAGE"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-deployment-bucket-illia-us-east-1",
            "Export": {
              "Name": "sls-cf-language-app-prod-ServerlessDeploymentBucketName"
            }
          },
          "GetTableLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTableLambdaVersionf2x2M0SmTJE59YI4kYyXcSEXNQRTHd7IiKRLl7M"
            },
            "Export": {
              "Name": "sls-cf-language-app-prod-GetTableLambdaFunctionQualifiedArn"
            }
          },
          "PostItemLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostItemLambdaVersionhhYmrqkBxH36SrfWk5zwiJNM7RO8S8a0vejYqwzNtQA"
            },
            "Export": {
              "Name": "sls-cf-language-app-prod-PostItemLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "LanguageAppApiGW"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/prod"
                ]
              ]
            },
            "Export": {
              "Name": "sls-cf-language-app-prod-ServiceEndpoint"
            }
          },
          "apiGatewayRestApiId": {
            "Value": {
              "Ref": "LanguageAppApiGW"
            },
            "Export": {
              "Name": "languageAppRestApiId"
            }
          },
          "apiGatewayRestApiRootResourceId": {
            "Value": {
              "Fn::GetAtt": [
                "LanguageAppApiGW",
                "RootResourceId"
              ]
            },
            "Export": {
              "Name": "languageAppApiRootId"
            }
          },
          "TableArn": {
            "Description": "The ARN for the Table",
            "Value": {
              "Fn::GetAtt": [
                "Table",
                "Arn"
              ]
            },
            "Export": {
              "Name": "dynamodb-language-app-table"
            }
          },
          "StreamArn": {
            "Description": "The ARN for the Event Stream",
            "Value": {
              "Fn::GetAtt": [
                "Table",
                "StreamArn"
              ]
            },
            "Export": {
              "Name": "dynamodb-language-app-stream"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "@silvermine/serverless-plugin-cloudfront-lambda-edge"
    ],
    "pluginsData": {},
    "functions": {
      "getTable": {
        "name": "language-app-get-item",
        "handler": "api/getItem/index.handler",
        "description": "get item from the dynamodb table",
        "memorySize": 128,
        "timeout": 5,
        "events": [
          {
            "http": {
              "path": "api/getItem",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {},
        "memory": 128,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "GetTableLambdaVersionf2x2M0SmTJE59YI4kYyXcSEXNQRTHd7IiKRLl7M"
      },
      "postItem": {
        "name": "language-app-post-item",
        "handler": "api/postItem/index.handler",
        "description": "post item to the dynamodb table",
        "memorySize": 128,
        "timeout": 5,
        "events": [
          {
            "http": {
              "path": "api/postItem",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {},
        "memory": 128,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "PostItemLambdaVersionhhYmrqkBxH36SrfWk5zwiJNM7RO8S8a0vejYqwzNtQA"
      }
    },
    "resources": {
      "Resources": {
        "LanguageAppApiGW": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "languageAppApiwGW"
          }
        },
        "Table": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "PointInTimeRecoverySpecification": {
              "PointInTimeRecoveryEnabled": true
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": "5",
              "WriteCapacityUnits": "5"
            },
            "TableName": "languageAppIn",
            "StreamSpecification": {
              "StreamViewType": "NEW_IMAGE"
            }
          }
        }
      },
      "Outputs": {
        "apiGatewayRestApiId": {
          "Value": {
            "Ref": "LanguageAppApiGW"
          },
          "Export": {
            "Name": "languageAppRestApiId"
          }
        },
        "apiGatewayRestApiRootResourceId": {
          "Value": {
            "Fn::GetAtt": [
              "LanguageAppApiGW",
              "RootResourceId"
            ]
          },
          "Export": {
            "Name": "languageAppApiRootId"
          }
        },
        "TableArn": {
          "Description": "The ARN for the Table",
          "Value": {
            "Fn::GetAtt": [
              "Table",
              "Arn"
            ]
          },
          "Export": {
            "Name": "dynamodb-language-app-table"
          }
        },
        "StreamArn": {
          "Description": "The ARN for the Event Stream",
          "Value": {
            "Fn::GetAtt": [
              "Table",
              "StreamArn"
            ]
          },
          "Export": {
            "Name": "dynamodb-language-app-stream"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/inikitin/Documents/SideProjects/language-mobile-app/backend/.serverless/cf-language-app.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/cf-language-app/prod/1643161279246-2022-01-26T01:41:19.246Z",
    "artifact": "cf-language-app.zip"
  }
}